{"version":3,"sources":["Labels/GazLabels.js","mockData/GazService.js","components/TableComponent.js","components/KnobComponent.js","shared/baseUrl.js","components/DialogComponent.js","service/noteService.js","Labels/TemperatureLabels.js","mockData/TemperatureService.js","mockData/WindService.js","mockData/RainService.js","mockData/IntensiteService.js","components/SideNavComponent.js","pages/Home.js","Labels/AboutPageLabels.js","pages/AboutUs.js","components/HeaderComponent.js","components/TitleComponent.js","pages/Temperature.js","components/CardComponent.js","shared/Notes.js","pages/Notes.js","components/TeamMemberCart.js","pages/Team.js","pages/Rain.js","pages/Gaz.js","pages/Wind.js","redux/ActionTypes.js","redux/SignInCreators.js","redux/TemperatureCreators.js","redux/PluvioCreators.js","redux/WindSpeedCreators.js","redux/GazCreators.js","main/Main.js","redux/auth.js","redux/TemperatureReducer.js","redux/PluvioReducer.js","redux/WindSpeedReducer.js","redux/GazReducer.js","App.js","redux/ConfigureStore.js","registerServiceWorker.js","index.js"],"names":["GazLabels","GazOptions_Semaine","title","display","text","fontSize","legend","position","CO2Options_Cette_Annee","SO2Options_Cette_Annee","GazOptions_Particule_Micron_Semaine","labels","fontColor","GazOptions_Particule_Micron_Mois","Table","props","gaz","particule_1_micron_aujourdhui","particule_2_5_micron_aujourdhui","particule_10_micron_aujourdhui","KnobCom","className","min","max","value","valueTemplate","readOnly","baseUrl","FormDialog","name","auth","useState","displayPosition","setDisplayPosition","setPosition","setValue","dialogFuncMap","onHide","note","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","json","error","catch","postNotesData","isAuthenticated","label","onClick","header","visible","modal","style","width","footer","icon","autoFocus","draggable","resizable","rows","cols","onChange","e","target","temperatureLabels","TemperatureOptions_Annee","TemperatureOptions_Semaine","TemperatureOptions_Aujourdhui","WindOptions_Semaine","scale","pointLabels","gridLines","color","WindOptions_Annee","scales","xAxes","ticks","yAxes","WindOptions_Mois","RainOptions_Semaine","RainOptions_Aujourdhui","RainOptions_Annee","Data_Intensity","datasets","data","backgroundColor","hoverBackgroundColor","SideNav","this","class","href","src","alt","data-toggle","data-placement","Component","Home","state","isSignedIn","ToWhite","bind","ToBlack","document","temperature","Avg_Temperature_Derniere_heure","Avg_Humidite_Derniere_heure","type","TemperatureData_Aujourdhui","options","wind","WindData_Semaine","Avg_WindSpeed_Ajourdhui","pluvio","RainData_Aujourdhui","AboutLabels","About","height","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","handleLogout","setState","event","preventDefault","loginUser","username","password","logoutUser","Fragment","dark","expand","isOpen","navbar","to","user","outline","isFetching","toggle","onSubmit","htmlFor","id","innerRef","input","Title","image","Temperature","TemperatureData_Semaine","domainPadding","labelOrientation","boxWidth","x","y","TemperatureData_Annee","CardExample","notes","Notes","map","user_notes","renderNote","Member","Team","Rain","RainData_Semaine","RainData_Annee","Gaz","CO2Data_Semaine","SO2Data_Semaine","CO2Data_Cette_Annee","SO2Data_Cette_Annee","GazData_Particule_Micron_Semaine","GazData_Particule_Micron_Mois","Wind","WindData_Mois","WindData_Annee","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","RECEIVED_AVG_TEMP_PER_SEMAINE","RECEIVED_AVG_TEMP_AUJOURDHUI","RECEIVED_AVG_TEMP_PER_ANNEE","RECEIVED_AVG_TEMP_DERNIERE_HEURE","RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE","RECEIVED_AVG_PLUVIO_PER_ANNEE","RECEIVED_AVG_PLUVIO_PER_SEMAINE","RECEIVED_AVG_PLUVIO_AUJOURDHUI","REQUEST_PLUVIO_FAILED","RECEIVED_AVG_WINDSPEED_PER_ANNEE","RECEIVED_AVG_WINDSPEED_PER_SEMAINE","RECEIVED_AVG_WINDSPEED_MOIS","RECEIVED_AVG_WINDSPEED_AUJOURDHUI","RECEIVED_AVG_CO2_PER_SEMAINE","RECEIVED_AVG_SO2_PER_SEMAINE","RECEIVED_AVG_CO2_PER_ANNEE","RECEIVED_AVG_SO2_PER_ANNEE","RECEIVED_AVG_PPM_MOIS","RECEIVED_AVG_PPM_PER_SEMAINE","RECEIVED_AVG_PPM_DERNIERE_HOUR","creds","dispatch","ActionTypes","requestLogin","ok","Error","status","statusText","success","setItem","token","receiveLogin","message","removeItem","monthsOfYear","daysOfWeek","receivedAvgTempSemaine","days","day","receivedAvgTempAujourdhui","hours","receivedAvgTempPerAnnee","months","receivedAvgTempDerniereHeure","receivedAvgHumiditeDerniereHeure","requestTempFailed","errmess","payload","receivedAvgPluvioAujourdhui","requestFailed","receivedAvgWindSpeedSemaine","receivedAvgWindSpeedPerMonth","receivedAvgWindSpeedPerAnnee","receivedAvgWindSpeedAujourdhui","requestWindSpeedFailed","receivedAvgCO2Semaine","receivedAvgSO2Semaine","receivedAvgCO2PerAnnee","receivedAvgSO2PerAnnee","receivedAvgPPMSemaine","receivedAvgPPMMois","receivedAvgPPMDerniereHeure","Main","fetchAvgTempPerSemaine","fetchAvgTempAujourdhui","fetchAvgTempPerAnnee","fetchAvgTempDerniereHeure","fetchAvgHumiditeDerniereHeure","fetchAvgPluvioPerSemaine","fetchAvgPluvioAujourdhui","fetchAvgPluvioPerAnnee","fetchAvgWindSpeedPerSemaine","fetchAvgWindSpeedPerMonth","fetchAvgWindSpeedPerAnnee","fetchAvgWindSpeedAujourdhui","fetchAvgCO2PerSemaine","fetchAvgSO2PerSemaine","fetchAvgCO2PerAnnee","fetchAvgSO2PerAnnee","fetchAvgPPMPerSemaine","fetchAvgPPMPerMois","fetchAvgPPMDernierHeure","path","component","exact","withRouter","connect","about_data","parameter","echelle","key","listOfJSON","push","Date","year","month","getDay","avg","console","log","hour","parseInt","avg_PPM1","avg_PPM2_5","avg_PPM4","avg_PPM10","Auth","isLoading","parse","errMess","action","fill","borderColor","Pluvio","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3ed3e473.chunk.js","sourcesContent":["export var GazLabels ={\r\n  title: \"Gaz\",\r\n  gaz_aujourdhui:\"Gaz Aujourd'hui\",\r\n  CO2_semaine:\"CO2 cette Semaine\",\r\n  SO2_semaine:\"SO2 cette Semaine\",\r\n  CO2_Cette_Anne:\"CO2 Cette Annee\",\r\n  SO2_Cette_Anne:\"SO2 Cette Annee\",\r\n  gaz_annee: \"Gaz cette annee\",\r\n  micron_semaine:\"Particules en Micron cette semaine\",\r\n  micron_mois: \"Particules en Micron ce mois\",\r\n  micron_1:\"Particule de 1micron en PPM\",\r\n  micron_2_5:\"Particule de 2.5 micron en PPM\",\r\n  micron_10:\"Particule de 10 micron en PPM\",\r\n}","\r\n\r\nexport var Avg_Co2_Aujourdhui = 350;\r\nexport var Avg_So2_Aujourdhui = 0.9;\r\nexport var Avg_No2_Aujourdhui = 32;\r\n\r\n\r\n\r\nexport var GazOptions_Semaine = {\r\n  title: {\r\n      display: true,\r\n      text: \"Gaz data cette semaine\",\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n\r\n\r\nexport var CO2Options_Cette_Annee = {\r\n  title: {\r\n      display: true,\r\n      text: \"CO2 derniers 30 jours\",\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n\r\nexport var SO2Options_Cette_Annee = {\r\n    title: {\r\n        display: true,\r\n        text: \"SO2 derniers 30 jours\",\r\n        fontSize: 16\r\n    },\r\n    legend: {\r\n        position: 'top'\r\n    }\r\n  };\r\n\r\n\r\n\r\nexport var GazOptions_Particule_Micron_Semaine = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: '#495057'\r\n      }\r\n  }\r\n};\r\n\r\n\r\nexport var GazOptions_Particule_Micron_Mois = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: '#495057'\r\n      }\r\n  }\r\n};\r\n","import { GazLabels } from '../Labels/GazLabels';\r\nimport {particule_1_micron_aujourdhui,particule_2_5_micron_aujourdhui,particule_10_micron_aujourdhui} from '..//mockData/GazService'\r\n\r\nexport default function Table(props){\r\n    return(\r\n      <div>\r\n        <table>\r\n        <tr>\r\n          <td>{GazLabels.micron_1}</td>\r\n          <td>{props.gaz.particule_1_micron_aujourdhui}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>{GazLabels.micron_2_5}</td>\r\n          <td>{props.gaz.particule_2_5_micron_aujourdhui}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>{GazLabels.micron_10}</td>\r\n          <td>{props.gaz.particule_10_micron_aujourdhui}</td>\r\n        </tr>\r\n      </table>\r\n      </div>\r\n    );\r\n  }","import \"primeicons/primeicons.css\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\nimport \"primereact/resources/primereact.css\";\r\nimport '../CSS/Dashboard.css'\r\n\r\nimport { Knob } from \"primereact/knob\";\r\nimport {Component} from 'react';\r\nimport {GazLabels} from  '../Labels/GazLabels';\r\n\r\nimport {Avg_So2_Aujourdhui,Avg_Co2_Aujourdhui,Avg_No2_Aujourdhui} from '../mockData/GazService';\r\n\r\n\r\nexport default function KnobCom(){\r\n  return(\r\n    <div className=\"card-custom\">\r\n        <br></br>\r\n      <div className=\"p-grid p-formgrid p-text-center center\">\r\n        <h2>{GazLabels.title}</h2>\r\n        <br></br>\r\n        <div>\r\n          <h4><bold>CO2</bold></h4>\r\n          <Knob min={0} max={800} value={Avg_Co2_Aujourdhui} valueTemplate={\"{value}ppm\"} readOnly />\r\n        </div>\r\n        <div>\r\n          <h4><bold>SO2</bold></h4>\r\n          <Knob value={Avg_So2_Aujourdhui} valueTemplate={\"{value}ppm\"} readOnly />\r\n        </div>\r\n        <div>\r\n          <h4><bold>NO2</bold></h4>\r\n          <Knob value={Avg_No2_Aujourdhui} valueTemplate={\"{value}ppm\"} readOnly />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const baseUrl = 'http://127.0.0.1:3030/';","import React, { useState } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport '../CSS/Dashboard.css'\r\nimport {postNotesData} from '../service/noteService';\r\nexport default function FormDialog({auth}) {\r\n    const [displayPosition, setDisplayPosition] = useState(false);\r\n    const [position, setPosition] = useState('center');\r\n    const [value, setValue] = useState('');\r\n\r\n    const dialogFuncMap = {\r\n        'displayPosition': setDisplayPosition,\r\n    }\r\n\r\n    const onClick = (name, position) => {\r\n        dialogFuncMap[`${name}`](true);\r\n\r\n        if (position) {\r\n            setPosition(position);\r\n        }\r\n    }\r\n\r\n    const onHide = (name) => {\r\n        dialogFuncMap[`${name}`](false);\r\n        \r\n        postNotesData(value)\r\n    }\r\n\r\n    const renderFooter = (name) => {\r\n        return (\r\n            <div>\r\n                <Button label=\"Submit\" icon=\"pi pi-check\" onClick={() => onHide(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n      \r\n    if(auth.isAuthenticated){\r\n        return (\r\n            <div>\r\n                    <Button label=\"Ecrire une Note\"  onClick={() => onClick('displayPosition', 'left')} className=\"p-button-warning sticky-element\" />\r\n                    <Dialog header=\"Note pour soi-même\" visible={displayPosition} position={position} modal style={{ width: '40vmin' }} footer={renderFooter('displayPosition')} onHide={() => onHide('displayPosition')}\r\n                        draggable={true} resizable={true} >\r\n                        <p className=\"p-m-0\">C'est un espace où vous pouvez ajouter vos notes sur les variables environnementales.<br></br>Vous pouvez suivre vos notes dans les pages de notes</p>\r\n                        <InputTextarea rows={8} cols={30} value={value} onChange={(e) => setValue(e.target.value)}/>\r\n                    </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { baseUrl } from '../shared/baseUrl.js';\r\n\r\nexport function getNotesData() \r\n{\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl+'users/notes',{\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n    })\r\n    .then(response => response.json(),\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response=> response)\r\n    .catch(error => error);    \r\n};\r\n\r\n\r\nexport function postNotesData(note) \r\n{\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl+'users/notes',\r\n    {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ note:note}),\r\n        headers:{\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => response.json(),\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response=> response)\r\n    .catch(error => error);    \r\n};","export var temperatureLabels ={\r\n  title: \"Temperature\",\r\n  temperature_donnee: \"Data de la Temperature\",\r\n  temperature_aujourdhui:\"Temperature Aujourd'hui en °C\",\r\n  temperature_semaine:\"Temperature cette Semaine\",\r\n  temperature_image: \"/assets/images/temperatureIcon.webp\",\r\n  avg:\"Moyenne Historique de temperature aujourd'hui\",\r\n  avg_temperature_semaine: \"Historique de la temperature cette semaine\",\r\n  temperature_annee:\"Temperature annee 2021\",\r\n  temperature_historique_annee:\"Temperature annee 2020\",\r\n  temperature_comparaison_annee:\"Temperature 2021 vs Temperature 2020\",\r\n  temperature_comparaison_semaine:\"Temperature cette semaine vs Temperature meme semaine 2020\",\r\n}","import {temperatureLabels} from '../Labels/TemperatureLabels'\r\n\r\n\r\n\r\nexport var TemperatureOptions_Annee = {\r\n  title: {\r\n      display: true,\r\n      text: temperatureLabels.temperature_annee,\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n\r\n\r\n\r\nexport var TemperatureOptions_Semaine = {\r\n  title: {\r\n      display: true,\r\n      text: temperatureLabels.temperature_semaine,\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n\r\n\r\n\r\nexport var TemperatureOptions_Aujourdhui= {\r\n  title: {\r\n      display: true,\r\n\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n","\r\n\r\nexport var WindOptions_Semaine = {\r\n  legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scale: {\r\n            pointLabels: {\r\n                fontColor: '#495057'\r\n            },\r\n            gridLines: {\r\n                color: '#ebedef'\r\n            }\r\n        }\r\n};\r\n\r\n\r\n\r\nexport var WindOptions_Annee = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: '#495057'\r\n      }\r\n  },\r\n  scales: {\r\n      xAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }],\r\n      yAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport var WindOptions_Mois = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: '#495057'\r\n      }\r\n  },\r\n  scales: {\r\n      xAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }],\r\n      yAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }]\r\n  }\r\n}","export var Avg_Rain_Aujourdhui = 30;\r\n\r\n\r\n\r\nexport var RainOptions_Semaine = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: '#495057'\r\n      }\r\n  },\r\n  scales: {\r\n      xAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }],\r\n      yAxes: [{\r\n          ticks: {\r\n              fontColor: '#495057'\r\n          }\r\n      }]\r\n  }\r\n};\r\n\r\n\r\n\r\nexport var RainOptions_Aujourdhui = {\r\n  title: {\r\n      display: true,\r\n      fontSize: 16\r\n  },\r\n  legend: {\r\n      position: 'top'\r\n  }\r\n};\r\n\r\n\r\n\r\nexport var RainOptions_Annee = {\r\n  legend: {\r\n      labels: {\r\n          fontColor: 'black'\r\n      }\r\n  },\r\n  scale: {\r\n      pointLabels: {\r\n          fontColor: 'red'\r\n      },\r\n      gridLines: {\r\n          color: 'green'\r\n      }\r\n  }\r\n};\r\n\r\n","export var Data_Intensity = {\r\n  labels: ['0:00','4:00','8:00','12:00','16:00','20:00','23:00'],\r\n  datasets: [\r\n      {\r\n          label: 'Évolution du rayonnement solaire direct I (W/m2) pendant la journée',\r\n          data: [50,75,650,900,750,100,50],\r\n          backgroundColor: [\r\n              \"red\"\r\n          ],\r\n          hoverBackgroundColor: [\r\n              \"#FF6384\",\r\n              \"#36A2EB\",\r\n              \"#FFCE56\"\r\n          ]\r\n      }]\r\n};","import { Component } from 'react';\r\nimport '../CSS/SideNav.css'\r\n\r\nclass SideNav extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n    render(){\r\n      var sideNav;\r\n      if(this.props.auth.isAuthenticated){\r\n        sideNav=<div class=\"sidenav\">\r\n                  <a href=\"/temperature\"><img src=\"/assets/images/temperatureIcon.webp\" alt=\"temperature\" width=\"100%\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Temperature\"/></a>\r\n                  <a href=\"/rain\"><img src=\"/assets/images/rain-icon.png\" width=\"100%\" alt=\"precipitations\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Precipitations\" /></a>\r\n                  <a href=\"/wind\"><img src=\"/assets/images/wind_data.webp\" width=\"100%\" alt=\"vent\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Vent\"/></a>\r\n                  <a href=\"/gaz\"><img src=\"/assets/images/gas.png\" width=\"100%\" alt=\"gas\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Gas\" /></a>\r\n                </div>\r\n        return sideNav\r\n      }\r\n      else{\r\n        return <div></div>\r\n      }\r\n    }\r\n}\r\nexport default SideNav;","import { Component } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport TableCom from '../components/TableComponent';\r\nimport KnobCom from '../components/KnobComponent';\r\nimport FormDialog from '../components/DialogComponent';\r\nimport '../CSS/Dashboard.css'\r\nimport { Avg_Humidite_Derniere_heure,Avg_Temperature_Derniere_heure,TemperatureOptions_Aujourdhui} from '../mockData/TemperatureService';\r\nimport {Avg_WindSpeed_Ajourdhui, WindOptions_Semaine} from '../mockData/WindService';\r\nimport {Avg_Rain_Aujourdhui,RainOptions_Aujourdhui} from '../mockData/RainService'\r\nimport {Data_Intensity} from '../mockData/IntensiteService'\r\nimport SideNav from '../components/SideNavComponent'\r\nimport { Button } from 'primereact/button'\r\n\r\n\r\n//import { Avg_Temperature_Aujourdui} from '../shared/Temperature';\r\n\r\n\r\n\r\nclass Home extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isSignedIn:false,\r\n      //Avg_Temperature_Aujourdui:0\r\n    }\r\n    this.ToWhite = this.ToWhite.bind(this);\r\n    this.ToBlack = this.ToBlack.bind(this);\r\n  }\r\n\r\n  ToWhite() {\r\n    document.body.style.backgroundColor = \"white\";\r\n    document.body.style.color= \"black\";\r\n  }\r\n\r\n  ToBlack() {\r\n    document.body.style.backgroundColor = \"black\";\r\n    document.body.style.color = \"rgba(250,192,46,255)\";\r\n  }\r\n\r\n\r\n//   componentDidMount(){\r\n//     this.setState({Avg_Temperature_Aujourdui:Avg_Temperature_Aujourdui});\r\n//     console.log(\"second respone is \" + Avg_Temperature_Aujourdui);\r\n// }\r\n\r\n\r\nrender(){\r\n  return(\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n            <div className=\"margin-1\">\r\n              <Button icon=\"pi pi-angle-double-left\" className=\"margin-1 p-button-rounded p-button-secondary\" onClick={this.ToBlack} />\r\n            </div>\r\n            <div className=\"margin-1\">\r\n              <Button icon=\"pi pi-angle-double-right\" className=\"margin-1 p-button-rounded p-button-warning\" onClick={this.ToWhite} />\r\n            </div>\r\n          </div>\r\n            <SideNav auth={this.props.auth} />\r\n            <FormDialog auth={this.props.auth} />\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-sm-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 col-md-12\">\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"card-custom\">\r\n                  <h2 className=\"card-subtitle mb-2\"><bold>Temperature</bold></h2>\r\n                  <h1 className=\"card-title\">{this.props.temperature.Avg_Temperature_Derniere_heure}°C &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span><img src=\"assets/images/temperatureIcon.webp\" width=\"25%\"/></span></h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"card-custom\">\r\n                  <h2 className=\"card-subtitle mb-2\"><bold>humidité</bold></h2>\r\n                  <h1 className=\"card-title\">{this.props.temperature.Avg_Humidite_Derniere_heure}% &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span><img src=\"assets/images/humidity-icon.png\" width=\"25%\"/></span></h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-9\">\r\n            <div className=\"card-custom\">\r\n              <h2 className=\"card-subtitle mb-2\"><bold>Temperature Aujourd'hui en °C</bold></h2>\r\n              <Chart type=\"line\" data={this.props.temperature.TemperatureData_Aujourdhui} options={TemperatureOptions_Aujourdhui}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <br></br>\r\n        <div class=\"row\">\r\n          <div className=\"col-md-9\">\r\n              <div className=\"card-custom center\">\r\n                <h2 className=\"card-subtitle mb-2\"><bold>Vitesse du Vent cette semaine en Km/h</bold></h2>\r\n                <Chart type=\"line\" data={this.props.wind.WindData_Semaine} />\r\n                <br></br>\r\n                <h4><bold>Moyenne de la vitesse du vent Aujourd'hui en Km/h: {this.props.wind.Avg_WindSpeed_Ajourdhui} km/h</bold></h4>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-3\">\r\n              <KnobCom />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <TableCom gaz={this.props.gaz}/>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <br></br>\r\n                <div className=\"card-custom\">\r\n                <h4 className=\"card-subtitle mb-2\"><bold>Intensité du rayonnement solaire en Watt/m2</bold></h4>\r\n                  <Chart type=\"line\" data={Data_Intensity} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"card-custom\">\r\n                  <h2 className=\"card-subtitle mb-2 center\"><bold>Pluie cumulée sur les dernières 24h</bold></h2>\r\n                  <br></br>\r\n                  <Chart type=\"bar\" data={this.props.pluvio.RainData_Aujourdhui} />\r\n                  <br></br>\r\n                  <h2> <bold>Pluis Cumule la derniere heure</bold></h2>\r\n                  <h1>{Avg_Rain_Aujourdhui}ml <span><img src=\"assets/images/rain-icon.png\" width=\"10%\"/></span></h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","export var AboutLabels ={\r\n  title:\"O-LIFE\",\r\n  sub_title: \"L'OBSERVATOIRE LIBANO-FRANÇAIS DE L'ENVIRONNEMENT\",\r\n  pourquoi_o_life: \"Pourquoi O-Life ?\",\r\n  definition: \"Definition\",\r\n  definition_text: \"O-LiFE est un observatoire de l’environnement Méditerranéen partagé entre le Liban et la France. Il a pour ambition de se positionner entre les sphères scientifiques et celles des décisions territoriales et politiques et notamment d’agir comme une plateforme de mise en œuvre des Objectifs du développement Durable ODD,\",\r\n  objectif:\"Objectif\",\r\n  objectif_text:\"O-LiFE permet la mutualisation, le partage des outils de l’observation (instrumentations, données in-situ, données satellites), la mise à disposition de capacités accrues d’accès à l’information à un moment ou la recherche sur les changements globaux et leurs impacts locaux nécessite des approches multidisciplinaires.\",\r\n  mission:\"Missions\",\r\n  mission_text_1: \"Concevoir, réaliser, partager des bases de données et des outils d’analyses synthétiques.\",\r\n  mission_text_2:\"Consolider et coordonner des services et réseaux d’observation.\",\r\n  mission_text_3:\"Communiquer sur les thématiques prioritaires et les mettre à disposition des scientifiques, décideurs, et public.\",\r\n  mission_text_4:\"Former et orienter des jeunes scientifiques sur des thèmes de recherche d’excellence.\",\r\n}\r\n","import {AboutLabels} from '../Labels/AboutPageLabels'\r\nimport '../CSS/About.css'\r\n\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row margin-about\">\r\n          <div className=\"col-md-6 center_div\">\r\n            <h1 className=\"title\">{AboutLabels.title}</h1>\r\n            <h3 className=\"sub_title \">{AboutLabels.sub_title}</h3>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <img src='assets/images/plant.png' className=\"floatRightClear\" alt=\"hiker\" width=\"100%\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n            <p className=\"centered\">{AboutLabels.pourquoi_o_life}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row margin-about\">\r\n          <div className=\"col-md-6 col-sm-12\">\r\n            <img src='assets/images/loop.jpeg' alt=\"OLIFE\" className=\"image-shadow\" width=\"100%\" height=\"100%\"/>\r\n          </div>\r\n          <div className=\"col-md-6 col-sm-12 center_div\">\r\n            <div class=\"row\">\r\n              <div className=\"col-md-5 mission-about \">\r\n                <h2 className=\"sub-title-about\">{AboutLabels.definition}</h2>\r\n                <br></br>\r\n                <p className=\"d-lg-block d-none\">{AboutLabels.definition_text}</p>\r\n              </div>\r\n              <div className=\"col-md-5 mission-about \">\r\n                <h2 className=\"sub-title-about\">{AboutLabels.objectif}</h2>\r\n                <br></br>\r\n                <p className=\"d-lg-block d-none\">{AboutLabels.objectif_text}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row margin-about\">\r\n          <div className=\"col-md-5 col-sm-5 center_div\">\r\n            <h1 className=\"center sub-title-about\">{AboutLabels.mission}</h1>\r\n            <br></br>\r\n            <br></br>\r\n            <ul>\r\n              <li>{AboutLabels.mission_text_1}.</li>\r\n              <li>{AboutLabels.mission_text_2}</li>\r\n              <li>{AboutLabels.mission_text_3}</li>\r\n              <li>{AboutLabels.mission_text_4}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-6 col-offset-1 col-sm-6\">\r\n            <img src='assets/images/magni.jpeg' alt=\"OLIFE\" className=\"image-shadow\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{Component} from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem,\r\n    Form,FormGroup,\r\nLabel , Input , Modal , ModalHeader , ModalBody } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        event.preventDefault();\r\n        this.props.loginUser({username: this.username.value, password: this.password.value});\r\n        this.toggleModal();\r\n        if (this.props.auth.isAuthenticated == false)\r\n        {\r\n            this.toggleModal();\r\n        }\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n            return(\r\n                <React.Fragment>\r\n                    <Navbar dark color=\"dark\" expand=\"md\">\r\n                        <div className=\"container\">\r\n                            <NavbarToggler onClick={this.toggleNav} />\r\n                            <NavbarBrand>O-Life</NavbarBrand>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\"  to='/home'>Acceuil</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/about'>A propos</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/team'>Equipe</NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        {this.props.auth.isAuthenticated ? <NavLink className=\"nav-link\" to='/Notes'>Mes Notes</NavLink>: null}\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    { !this.props.auth.isAuthenticated ?\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> S'inscrire\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        :\r\n                                        <div>\r\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.username}</div>\r\n                                        <Button outline onClick={this.handleLogout}>\r\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Fermer\r\n                                            {this.props.auth.isFetching ?\r\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                : null\r\n                                            }\r\n                                        </Button>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                            </Collapse>\r\n                        </div>\r\n                    </Navbar>\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">S'inscrire</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </React.Fragment>\r\n            );\r\n\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import {Component} from 'react'\r\n\r\nclass Title extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"col-md-12 center\">\r\n          <h1>{this.props.title}&nbsp;&nbsp;&nbsp;<span><img src={this.props.image} width=\"10%\"/></span></h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;","import {Component} from \"react\";\r\nimport { Chart } from 'primereact/chart';\r\nimport {/*TemperatureData_Annee*/ TemperatureOptions_Annee,\r\n     /*TemperatureData_Semaine,*/ TemperatureOptions_Semaine,\r\n     /* TemperatureData_Aujourdhui,*/ TemperatureOptions_Aujourdhui} from '../mockData/TemperatureService';\r\nimport { temperatureLabels } from '../Labels/TemperatureLabels';\r\nimport '../CSS/Dashboard.css'\r\nimport Title from '../components/TitleComponent';\r\nimport SideNav from '../components/SideNavComponent';\r\n\r\nimport { VictoryBoxPlot, VictoryChart } from 'victory';\r\n\r\n\r\nexport default function Temperature(props){\r\n  //   constructor(props)\r\n  //   {\r\n  //     super(props);\r\n  //   }\r\n  //   componentDidMount(){\r\n  //     // this.setState({TemperatureData_Annee: TemperatureData_Annee,\r\n  //     //                 TemperatureData_Semaine:TemperatureData_Semaine,\r\n  //     //                 TemperatureData_Aujourdhui:TemperatureData_Aujourdhui\r\n  //     //               });\r\n  // }\r\n  //  render(){\r\n      return(\r\n        <div className=\"container-fluid\">\r\n        <SideNav auth={props.auth} />\r\n        <div  className=\"container\">\r\n          <div className=\"row\">\r\n            <Title title=\"Temperature\" image=\"/assets/images/temperatureIcon.webp\"/>\r\n          </div>\r\n\r\n\r\n          <div className=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div className=\"card-custom\">\r\n                    <h1>{temperatureLabels.temperature_aujourdhui}</h1>\r\n                    <Chart type=\"line\" data={props.TemperatureData_Aujourdhui} options={TemperatureOptions_Aujourdhui}/>\r\n                </div>\r\n            </div>\r\n             <div class=\"col-md-6\">\r\n              <br></br>\r\n              <br></br>\r\n              <div className=\"card-custom\">\r\n                  <h1>{temperatureLabels.temperature_semaine}</h1>\r\n                  <Chart type=\"line\" data={props.TemperatureData_Semaine} options={TemperatureOptions_Semaine} />\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div className=\"card-custom\">\r\n                <h1>{temperatureLabels.temperature_semaine}</h1>\r\n                <VictoryChart domainPadding={10}>\r\n                  <VictoryBoxPlot\r\n                    labels\r\n                    labelOrientation=\"bottom\"\r\n                    boxWidth={10}\r\n                    data={[\r\n                      { x: \"Mon\", y: [14, 15, 18, 15]},\r\n                      { x: \"Tue\", y: [14,16, 18, 16]},\r\n                      { x: \"Wed\", y: [14 ,17, 19,16] },\r\n                      { x: \"Thu\", y: [15, 18, 18, 17] },\r\n                      { x: \"Fri\", y: [17, 19, 19,15] },\r\n                      { x: \"Sat\", y: [13, 15, 15, 14] },\r\n                      { x: \"Sun\", y: [19,18,17,17] },\r\n                    ]}\r\n                  />\r\n                </VictoryChart>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div className=\"card-custom\">\r\n                <h1>{temperatureLabels.temperature_annee}</h1>\r\n                <VictoryChart domainPadding={10}>\r\n                  <VictoryBoxPlot\r\n                    labels\r\n                    labelOrientation=\"bottom\"\r\n                    boxWidth={15}\r\n                    data={[\r\n\r\n                      { x: \"Jan\", y: [3, 5, 17, 18] },\r\n\r\n                      { x: \"Fev\", y: [1, 4, 22, 22] },\r\n\r\n                      { x: \"Mars\", y: [13, 15, 25, 25] },\r\n\r\n                      { x: \"Avr\", y: [15,17,27,33,36] },\r\n\r\n                      { x: \"Mai\", y: [14,17,26,33,39] },\r\n\r\n                      { x: \"Jui\", y: [25, 27, 33, 36,38] },\r\n\r\n                      { x: \"Aout\", y: [24,26,33,35,40] },\r\n\r\n                      { x: \"Sep\", y: [15,20,23,26,29] },\r\n\r\n                      { x: \"Oct\", y: [14,15,16,23,25] },\r\n\r\n                      { x: \"Nov\", y: [10,12,16,17,22] },\r\n\r\n                      { x: \"Dec\", y: [3,7,12,14,16] },\r\n\r\n                    ]}\r\n                  />\r\n                </VictoryChart>\r\n              </div>\r\n            </div>\r\n              <div class=\"col-md-6\">\r\n                  <br></br>\r\n                  <br></br>\r\n                  <div className=\"card-custom\">\r\n                    <h1>{temperatureLabels.temperature_annee}</h1>\r\n                    <Chart type=\"line\" data={props.TemperatureData_Annee} options={TemperatureOptions_Annee} />\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div></div>\r\n      );\r\n                  \r\n}","import React, {Component} from 'react';\r\n\r\nclass CardExample extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"col-md-4\">\r\n        <br></br>\r\n          <div className=\"card-custom\">\r\n            <h4 className=\"card-subtitle mb-2\">{this.props.title}</h4>\r\n            <h2 className=\"card-title\">{this.props.data} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span><img src={this.props.image} width=\"25%\"/></span></h2>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardExample;","import {getNotesData} from '../service/noteService';\r\n\r\n\r\n\r\nvar notes =[\"Le 17/2/2021 , Temperature etait 25C\",\r\n\"Le 23/2/2021 , Temperature a augmente 5% par rapport a 17/2/2021\",\r\n\"Une variation a normale de la vitesse du vent entre 12:00 et 16:30 en 27/2/2021\"\r\n];\r\n/*\r\nvar key;\r\ngetNotesData().then(response => { \r\n                            for ( key in response) \r\n                            {\r\n                                notes.push(response[key]);\r\n                            };\r\n                          });*/\r\nexport default notes;","import { render } from '@testing-library/react';\r\nimport {Component} from 'react';\r\nimport { createStore } from 'redux';\r\nimport CardExample from '../components/CardComponent';\r\nimport notes from '../shared/Notes';\r\n\r\n\r\nclass Notes extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n  }\r\n\r\n renderNote(){\r\n  return notes.map((note) => (\r\n        <CardExample title={note} />\r\n  ));\r\n }\r\n  render(){\r\n    const user_notes= this.renderNote();\r\n  return(\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <h1>My Notes</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n          {user_notes}\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Notes;","import {Component} from 'react'\r\n\r\nclass Member extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div class=\"card-body center\">\r\n          <img class=\"avatar\" src={this.props.image} alt=\"Team Member\"/>\r\n          <div>\r\n            <br></br>\r\n            <h2 class=\"card-text\"><bold>{this.props.name} </bold></h2>\r\n            <h4>{this.props.title}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Member;","import Member from '../components/TeamMemberCart'\r\nimport '../CSS/About.css'\r\n\r\nexport default function Team(){\r\n    return(\r\n      <div className=\"container\">\r\n          <div className=\"row \">\r\n              <p className=\"centered_Team\">Team</p>\r\n          </div>\r\n          <div className=\"row \">\r\n              <h1><bold>Encadrants</bold></h1>\r\n              <br></br>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Laurent Drapeau\" title=\"Ingénieur de recherche en calcul scientifique (CESBIO) et représentant de l'IRD au\r\nLiban (2014-2018)\" image=\"/assets/images/drapeau__252x252.png\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Youssef Bakouny\" title=\"Professeur associé à la Faculté d'ingénierie ESIB de l'Université Saint Joseph de Beyrouth\" image=\"/assets/images/bakouny_.jpg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Gabriel Khoury\" title=\"Professeur associé à la Faculté d'ingénierie ESIB de l'Université Saint Joseph de Beyrouth\" image=\"/assets/images/Gabriel-Khoury.jpg\"/>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"row\">\r\n            <h1><bold>Etudiants</bold></h1>\r\n            <br></br>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Mouafac Ghattas\" title=\"Génie Logiciel\" image=\"/assets/images/MyPhoto.jpg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Anas Daou\" title=\"Génie Logiciel\" image=\"/assets/images/anas.jpeg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Cyril Karam\" title=\"Génie Telecom\" image=\"/assets/images/cyril.jpeg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Nabil Nemer\" title=\"Génie Électromécanique\" image=\"/assets/images/nabil.jpeg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Patrick Bou Samra\" title=\"Systèmes industriels\" image=\"/assets/images/patrick_.jpeg\"/>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Member name=\"Hadi Azar\" title=\"Systèmes industriels\" image=\"/assets/images/hadi_.jpg\"/>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}","import { Chart } from 'primereact/chart';\r\nimport Title from '../components/TitleComponent';\r\n//import {RainData_Semaine,RainOptions_Semaine} from '../shared/RainService';\r\nimport {/*RainData_Annee*/RainOptions_Annee,\r\n        /*RainData_Aujourdhui0*/RainOptions_Aujourdhui,\r\n        /*RainData_Semaine,*/RainOptions_Semaine} from '../mockData/RainService';\r\n\r\n        import SideNav from '../components/SideNavComponent';\r\nimport { VictoryBoxPlot, VictoryChart ,VictoryTheme,VictoryScatter} from 'victory';\r\nimport '../CSS/Dashboard.css'\r\n\r\n\r\n\r\n\r\nexport default function Rain(props) {\r\n  return(\r\n    <div className=\"container-fluid\">\r\n    <SideNav auth={props.auth} />\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Title title=\"Pluie \" image=\"/assets/images/rain-icon.png\"/>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n              <h1>Pluie dans les dernières 24h</h1>\r\n              <Chart type=\"bar\" data={props.RainData_Aujourdhui} options={RainOptions_Aujourdhui} />\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n              <h1>Pluie cette semaine</h1>\r\n              <Chart type=\"bar\" data={props.RainData_Semaine} options={RainOptions_Semaine} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n              <h1>Pluie cette année</h1>\r\n              <Chart type=\"radar\" data={props.RainData_Annee} options={RainOptions_Annee} />\r\n            </div>\r\n          </div>\r\n          {/* <div class=\"col-md-12\">\r\n              <div className=\"card-custom\">\r\n                <h1>Precipitations Annee</h1>\r\n                <VictoryChart>\r\n                  <VictoryBoxPlot\r\n                    labels\r\n                    labelOrientation=\"top\"\r\n                    boxWidth={15}\r\n                    data={[\r\n                      { x: \"Jan\", y: [1, 2, 3, 5] },\r\n                      { x: \"Fev\", y: [3, 2, 8, 10] },\r\n                      { x: \"Mars\", y: [2, 8, 6, 5] },\r\n                      { x: \"Avr\", y: [1, 3, 2, 9] },\r\n                      { x: \"Mai\", y: [1, 3, 2, 9] },\r\n                      { x: \"Jui\", y: [1, 3, 2, 9] },\r\n                      { x: \"Aout\", y: [1, 3, 2, 9] },\r\n                      { x: \"Sep\", y: [1, 3, 2, 9] },\r\n                      { x: \"Oct\", y: [1, 3, 2, 9] },\r\n                      { x: \"Nov\", y: [1, 3, 2, 9] },\r\n                      { x: \"Dec\", y: [1, 3, 2, 9] },\r\n                    ]}\r\n                  />\r\n                </VictoryChart>\r\n              </div>\r\n          </div> */}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import {Component} from 'react'\r\nimport {CO2Options_Cette_Annee,\r\n  SO2Options_Cette_Annee,\r\n      GazOptions_Semaine,\r\n      GazOptions_Particule_Micron_Semaine,\r\n      GazOptions_Particule_Micron_Mois } from '../mockData/GazService';\r\n\r\n\r\nimport { Chart } from 'primereact/chart';\r\nimport Title from '../components/TitleComponent'\r\nimport {GazLabels} from '../Labels/GazLabels';\r\nimport SideNav from '../components/SideNavComponent';\r\nimport '../CSS/Dashboard.css'\r\n\r\n\r\nimport { VictoryBoxPlot, VictoryChart } from 'victory';\r\n\r\n\r\nexport default function Gaz(props){\r\n  return(\r\n    <div className=\"container-fluid\">\r\n      <SideNav auth = {props.auth}/>\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n        <Title title={GazLabels.title} image=\"/assets/images/gas.png\"/>\r\n      </div>\r\n\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.CO2_semaine}</h1>\r\n            <Chart type=\"horizontalBar\" data={props.gaz.CO2Data_Semaine} options={GazOptions_Semaine} />\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.SO2_semaine}</h1>\r\n            <Chart type=\"horizontalBar\" data={props.gaz.SO2Data_Semaine} options={GazOptions_Semaine} />\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.CO2_Cette_Anne}</h1>\r\n            <Chart type=\"bar\" data={props.gaz.CO2Data_Cette_Annee} options={CO2Options_Cette_Annee} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.SO2_Cette_Anne}</h1>\r\n            <Chart type=\"bar\" data={props.gaz.SO2Data_Cette_Annee} options={SO2Options_Cette_Annee} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"col-md-12\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.gaz_annee}</h1>\r\n            <Chart type=\"bar\" data={GazData_Derniers_12_Mois} options={GazOptions_Derniers_12_Mois} />\r\n          </div>\r\n        </div> */}\r\n        <div class=\"col-md-12\">\r\n\r\n<div className=\"card-custom\">\r\n\r\n  <h1>CO2 Annee 2021 en PPM</h1>\r\n\r\n  <VictoryChart>\r\n\r\n    <VictoryBoxPlot\r\n\r\n      labels\r\n\r\n      labelOrientation=\"top\"\r\n\r\n      boxWidth={15}\r\n\r\n      data={[\r\n\r\n        { x: \"Jan\", y: [400, 400, 410, 410,420] },\r\n\r\n        { x: \"Fev\", y: [405, 410, 411, 415,415] },\r\n\r\n        { x: \"Mars\", y: [400, 400, 410, 412,412] },\r\n\r\n        { x: \"Avr\", y: [400, 401, 403, 405,410] },\r\n\r\n        { x: \"Mai\", y: [402, 405, 409, 410,413] },\r\n\r\n        { x: \"Jui\", y: [415, 416, 420, 425,430] },\r\n\r\n        { x: \"Aout\", y: [410, 412, 415, 415,420] },\r\n\r\n        { x: \"Sep\", y: [403, 405, 410, 411,412] },\r\n\r\n        { x: \"Oct\", y: [401, 402, 409, 410,412] },\r\n\r\n        { x: \"Nov\", y: [402, 404, 408, 410,415] },\r\n\r\n        { x: \"Dec\", y: [400, 402, 410, 410,420] },\r\n\r\n      ]}\r\n\r\n    />\r\n\r\n  </VictoryChart>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.micron_semaine}</h1>\r\n            <Chart type=\"doughnut\" data={props.gaz.GazData_Particule_Micron_Semaine} options={GazOptions_Particule_Micron_Semaine} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card-custom\">\r\n            <h1>{GazLabels.micron_mois}</h1>\r\n            <Chart type=\"pie\" data={props.gaz.GazData_Particule_Micron_Mois} options={GazOptions_Particule_Micron_Mois} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Component} from 'react'\r\nimport { Chart } from 'primereact/chart';\r\nimport {WindOptions_Semaine,WindOptions_Annee,WindOptions_Mois} from '../mockData/WindService';\r\nimport CardExample from '../components/CardComponent'\r\nimport Title from '../components/TitleComponent';\r\nimport SideNav from '../components/SideNavComponent';\r\n\r\n\r\n\r\nexport default function Wind(props){\r\n    return(\r\n      <div className=\"container-fluid\">\r\n        <SideNav auth={props.auth} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Title title=\"Vitesse du Vent\" image=\"/assets/images/wind_data.webp\"/>\r\n        </div>\r\n        \r\n        <div className=\"row\">\r\n         \r\n            <CardExample title=\"Vitesse du Vent Aujourd'hui\" data=\"13km/h\"/>\r\n            <CardExample title=\"Direction du Vent\" data=\"22° 14°\"/>\r\n          \r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n                <h1>Vitesse du Vent cette semaine</h1>\r\n                <Chart type=\"radar\" data={props.WindData_Semaine} options={WindOptions_Semaine} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n                <h1>Vitesse du Vent ce mois</h1>\r\n                <Chart type=\"line\" data={props.WindData_Mois} options={WindOptions_Mois} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card-custom\">\r\n              <h1>Vitesse du Vent cette annee</h1>\r\n              <Chart type=\"line\" data={props.WindData_Annee} options={WindOptions_Annee} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n}","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\n//Temperature actions types\r\nexport const RECEIVED_AVG_TEMP_PER_SEMAINE = 'RECEIVED_AVG_TEMP_PER_SEMAINE';\r\nexport const RECEIVED_AVG_TEMP_AUJOURDHUI = 'RECEIVED_AVG_TEMP_AUJOURDHUI';\r\nexport const RECEIVED_AVG_TEMP_PER_ANNEE = 'RECEIVED_AVG_TEMP_PER_ANNEE';\r\nexport const RECEIVED_AVG_TEMP_DERNIERE_HEURE ='RECEIVED_AVG_TEMP_DERNIERE_HEURE';\r\nexport const RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE ='RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE';\r\nexport const REQUEST_TEMP_FAILED = 'REQUEST_TEMP_FAILED';\r\n\r\n//Pluvio actions Types\r\nexport const RECEIVED_AVG_PLUVIO_PER_ANNEE = 'RECEIVED_AVG_PLUVIO_PER_ANNEE';\r\nexport const RECEIVED_AVG_PLUVIO_PER_SEMAINE = 'RECEIVED_AVG_PLUVIO_PER_SEMAINE';\r\nexport const RECEIVED_AVG_PLUVIO_AUJOURDHUI = 'RECEIVED_AVG_PLUVIO_AUJOURDHUI';\r\nexport const REQUEST_PLUVIO_FAILED = 'REQUEST_PLUVIO_FAILED';\r\n\r\n//WindSpeed actions Types\r\nexport const RECEIVED_AVG_WINDSPEED_PER_ANNEE = 'RECEIVED_AVG_WINDSPEED_PER_ANNEE';\r\nexport const RECEIVED_AVG_WINDSPEED_PER_SEMAINE = 'RECEIVED_AVG_WINDSPEED_PER_SEMAINE';\r\nexport const RECEIVED_AVG_WINDSPEED_MOIS = 'RECEIVED_AVG_WINDSPEED_MOIS';\r\nexport const RECEIVED_AVG_WINDSPEED_AUJOURDHUI ='RECEIVED_AVG_WINDSPEED_AUJOURDHUI';\r\nexport const REQUEST_WINDSPEED_FAILED = 'REQUEST_WINDSPEED_FAILED';\r\n\r\n//Gaz actions Types\r\nexport const RECEIVED_AVG_CO2_PER_SEMAINE = 'RECEIVED_AVG_CO2_PER_SEMAINE';\r\nexport const RECEIVED_AVG_SO2_PER_SEMAINE = 'RECEIVED_AVG_SO2_PER_SEMAINE';\r\nexport const RECEIVED_AVG_CO2_PER_ANNEE = 'RECEIVED_AVG_CO2_PER_ANNEE';\r\nexport const RECEIVED_AVG_SO2_PER_ANNEE = 'RECEIVED_AVG_SO2_PER_ANNEE';\r\nexport const RECEIVED_AVG_PPM_MOIS = 'RECEIVED_AVG_PPM_MOIS';\r\nexport const RECEIVED_AVG_PPM_PER_SEMAINE = 'RECEIVED_AVG_PPM_PER_SEMAINE';\r\nexport const RECEIVED_AVG_PPM_DERNIERE_HOUR = 'RECEIVED_AVG_PPM_DERNIERE_HOUR';\r\nexport const REQUEST_PPM_FAILED = 'REQUEST_PPM_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token\r\n    }\r\n}\r\n  \r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\nexport const loginUser = (creds) => (dispatch) => {\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n\r\n    dispatch(requestLogin(creds));\r\n\r\n    return fetch(baseUrl+'users/login' , {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if (response.success) {\r\n            // If login was successful, set the token in local storage\r\n            localStorage.setItem('token', response.token);\r\n            localStorage.setItem('creds', JSON.stringify(creds));\r\n            // Dispatch the success action\r\n            //dispatch(fetchFavorites());\r\n            dispatch(receiveLogin(response));\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(loginError(error.message)))\r\n};\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n  \r\nexport const receiveLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n// Logs the user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    dispatch(receiveLogout())\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nvar  monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nvar daysOfWeek=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n\r\nexport const fetchAvgTempPerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(daysOfWeek[new Date(listOfJSON[key].year,listOfJSON[key].month,listOfJSON[key].day).getDay()]);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempSemaine(data,days));\r\n            console.log(\"AVG_TEMP_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestTempFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgTempSemaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_TEMP_PER_SEMAINE,\r\n    data: data,\r\n    day:days\r\n});\r\n\r\n\r\nexport const fetchAvgTempAujourdhui = (parameter,echelle) => (dispatch) => {\r\n    var hours = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            hours.push(listOfJSON[key].hour+':00');\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempAujourdhui(data,hours));\r\n            console.log(\"AVG_TEMP_AUJOURDHUI IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestTempFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgTempAujourdhui = (data,hours) => ({\r\n    type: ActionTypes.RECEIVED_AVG_TEMP_AUJOURDHUI,\r\n    data: data,\r\n    hours:hours\r\n});\r\n\r\n\r\nexport const fetchAvgTempPerAnnee = (parameter,echelle) => (dispatch) => {\r\n    var months = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                months.push(monthsOfYear[listOfJSON[key].month-1]);\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempPerAnnee(data,months));\r\n            console.log(\"AVG_TEMP_PER_ANNEE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestTempFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgTempPerAnnee = (data,months) => ({\r\n    type: ActionTypes.RECEIVED_AVG_TEMP_PER_ANNEE,\r\n    data: data,\r\n    months:months\r\n});\r\n\r\n\r\nexport const fetchAvgTempDerniereHeure = (parameter,echelle) => (dispatch) => {\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempDerniereHeure(parseInt(data[0])));\r\n            console.log(\"AVG_TEMP_PER_DERNIERE_HEURE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestTempFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgTempDerniereHeure = (data) => ({\r\n    type: ActionTypes.RECEIVED_AVG_TEMP_DERNIERE_HEURE,\r\n    data: data\r\n});\r\n\r\n\r\n\r\nexport const fetchAvgHumiditeDerniereHeure = (parameter,echelle) => (dispatch) => {\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgHumiditeDerniereHeure(parseInt(data[0])));\r\n            console.log(\"RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestTempFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgHumiditeDerniereHeure = (data) => ({\r\n    type: ActionTypes.RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE,\r\n    data: data\r\n});\r\n\r\nexport const requestTempFailed = (errmess) => ({\r\n    type: ActionTypes.REQUEST_TEMP_FAILED,\r\n    payload: errmess\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nvar  monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nvar daysOfWeek=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n\r\nexport const fetchAvgPluvioPerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(daysOfWeek[new Date(listOfJSON[key].year,listOfJSON[key].month,listOfJSON[key].day).getDay()]);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempSemaine(data,days));\r\n            console.log(\"AVG_PLUVIO_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgTempSemaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PLUVIO_PER_SEMAINE,\r\n    data: data,\r\n    day:days\r\n});\r\n\r\n\r\nexport const fetchAvgPluvioAujourdhui = (parameter,echelle) => (dispatch) => {\r\n    var hours = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Pluvio/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            hours.push(listOfJSON[key].hour+':00');\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgPluvioAujourdhui(data,hours));\r\n            console.log(\"AVG_PLUVIO_AUJOURDHUI IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgPluvioAujourdhui = (data,hours) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PLUVIO_AUJOURDHUI,\r\n    data: data,\r\n    hours:hours\r\n});\r\n\r\n\r\nexport const fetchAvgPluvioPerAnnee = (parameter,echelle) => (dispatch) => {\r\n    var months = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'Temperature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                months.push(monthsOfYear[listOfJSON[key].month-1]);\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgTempPerAnnee(data,months));\r\n            console.log(\"AVG_PLUVIO_PER_ANNEE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgTempPerAnnee = (data,months) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PLUVIO_PER_ANNEE,\r\n    data: data,\r\n    months:months\r\n});\r\n\r\nexport const requestFailed = (errmess) => ({\r\n    type: ActionTypes.REQUEST_PLUVIO_FAILED,\r\n    payload: errmess\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nvar  monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nvar daysOfWeek=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n\r\nexport const fetchAvgWindSpeedPerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'WindSpeed/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(daysOfWeek[new Date(listOfJSON[key].year,listOfJSON[key].month,listOfJSON[key].day).getDay()]);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgWindSpeedSemaine(data,days));\r\n            console.log(\"AVG_WindSpeed_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestWindSpeedFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgWindSpeedSemaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_WINDSPEED_PER_SEMAINE,\r\n    data: data,\r\n    days:days\r\n});\r\n\r\n\r\nexport const fetchAvgWindSpeedPerMonth = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'WindSpeederature/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(listOfJSON[key].day+'/'+listOfJSON[key].month);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgWindSpeedPerMonth(data,days));\r\n            console.log(\"AVG_WindSpeed_MOIS IS \" + data)    \r\n            console.log(\"DAYS_WindSpeed_MOIS IS \" + days)         \r\n        })\r\n        .catch(error => dispatch(requestWindSpeedFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgWindSpeedPerMonth = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_WINDSPEED_MOIS,\r\n    data: data,\r\n    days:days\r\n});\r\n\r\n\r\nexport const fetchAvgWindSpeedPerAnnee = (parameter,echelle) => (dispatch) => {\r\n    var months = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'WindSpeed/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                months.push(monthsOfYear[listOfJSON[key].month-1]);\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgWindSpeedPerAnnee(data,months));\r\n            console.log(\"AVG_WindSpeed_PER_ANNEE IS \" + data)\r\n            console.log(\"MONTHS_WindSpeed_PER_ANNEE IS \" + data)              \r\n        })\r\n        .catch(error => dispatch(requestWindSpeedFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgWindSpeedPerAnnee = (data,months) => ({\r\n    type: ActionTypes.RECEIVED_AVG_WINDSPEED_PER_ANNEE,\r\n    data: data,\r\n    months:months\r\n});\r\n\r\n\r\n\r\nexport const fetchAvgWindSpeedAujourdhui = (parameter,echelle) => (dispatch) => {\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'WindSpeed/perHour/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgWindSpeedAujourdhui(data[0])); //une seule valeure la liste\r\n            console.log(\"AVG_WindSpeed_AUJOURDHUI IS \" + data)      \r\n        })\r\n        .catch(error => dispatch(requestWindSpeedFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgWindSpeedAujourdhui = (data) => ({\r\n    type: ActionTypes.RECEIVED_AVG_WINDSPEED_AUJOURDHUI,\r\n    data: data\r\n});\r\n\r\nexport const requestWindSpeedFailed = (errmess) => ({\r\n    type: ActionTypes.REQUEST_WINDSPEED_FAILED,\r\n    payload: errmess\r\n});","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nvar  monthsOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nvar daysOfWeek=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n\r\nexport const fetchAvgCO2PerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'CO2/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(daysOfWeek[new Date(listOfJSON[key].year,listOfJSON[key].month,listOfJSON[key].day).getDay()]);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgCO2Semaine(data,days));\r\n            console.log(\"AVG_CO2_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgCO2Semaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_CO2_PER_SEMAINE,\r\n    data: data,\r\n    days:days\r\n});\r\n\r\n\r\n\r\nexport const fetchAvgSO2PerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var days = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'CO2/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            days.push(daysOfWeek[new Date(listOfJSON[key].year,listOfJSON[key].month,listOfJSON[key].day).getDay()]);\r\n            data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgSO2Semaine(data,days));\r\n            console.log(\"AVG_SO2_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgSO2Semaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_SO2_PER_SEMAINE,\r\n    data: data,\r\n    days:days\r\n});\r\n\r\n\r\n\r\nexport const fetchAvgCO2PerAnnee = (parameter,echelle) => (dispatch) => {\r\n    var months = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                months.push(monthsOfYear[listOfJSON[key].month-1]);\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgCO2PerAnnee(data,months));\r\n            console.log(\"AVG_CO2_PER_ANNEE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgCO2PerAnnee = (data,months) => ({\r\n    type: ActionTypes.RECEIVED_AVG_CO2_PER_ANNEE,\r\n    data: data,\r\n    months:months\r\n});\r\n\r\nexport const fetchAvgSO2PerAnnee = (parameter,echelle) => (dispatch) => {\r\n    var months = [];\r\n    var data = [];\r\n    var key;\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n                months.push(monthsOfYear[listOfJSON[key].month-1]);\r\n                data.push(listOfJSON[key].avg);\r\n            }\r\n            dispatch(receivedAvgSO2PerAnnee(data,months));\r\n            console.log(\"AVG_SO2_PER_ANNEE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgSO2PerAnnee = (data,months) => ({\r\n    type: ActionTypes.RECEIVED_AVG_SO2_PER_ANNEE,\r\n    data: data,\r\n    months:months\r\n});\r\n\r\n\r\n\r\nexport const fetchAvgPPMPerSemaine = (parameter,echelle) => (dispatch) => {\r\n    var key;\r\n    var data=[];\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'CO2/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            data.push(listOfJSON[key].avg_PPM1);\r\n            data.push(listOfJSON[key].avg_PPM2_5);\r\n            data.push(listOfJSON[key].avg_PPM4);\r\n            data.push(listOfJSON[key].avg_PPM10);\r\n            }\r\n            dispatch(receivedAvgPPMSemaine(data));\r\n            console.log(\"AVG_PPM_PER_SEMAINE IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgPPMSemaine = (data,days) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PPM_PER_SEMAINE,\r\n    data: data,\r\n});\r\n\r\nexport const fetchAvgPPMPerMois = (parameter,echelle) => (dispatch) => {\r\n    var key;\r\n    var data = [];\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'CO2/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            data.push(listOfJSON[key].avg_PPM1);\r\n            data.push(listOfJSON[key].avg_PPM2_5);\r\n            data.push(listOfJSON[key].avg_PPM4);\r\n            data.push(listOfJSON[key].avg_PPM10);\r\n            }\r\n            dispatch(receivedAvgPPMMois(data));\r\n            console.log(\"AVG_PPM_PER_MOIS IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\nexport const receivedAvgPPMMois = (data) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PPM_MOIS,\r\n    data: data,\r\n});\r\n\r\n\r\nexport const fetchAvgPPMDernierHeure = (parameter,echelle) => (dispatch) => {\r\n    var key;\r\n    var data = [];\r\n    return fetch(baseUrl+'parameter/'+parameter+'/'+echelle)  //fetch(baseUrl+'CO2/perDay/7')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(listOfJSON => {\r\n            \r\n            for (key in listOfJSON)\r\n            {\r\n            data.push(listOfJSON[key].avg_PPM1);\r\n            data.push(listOfJSON[key].avg_PPM2_5);\r\n            data.push(listOfJSON[key].avg_PPM10);\r\n            }\r\n            dispatch(receivedAvgPPMDerniereHeure(data));\r\n            console.log(\"RECEIVED_AVG_PPM_DERNIERE_HOUR IS \" + data)            \r\n        })\r\n        .catch(error => dispatch(requestFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const receivedAvgPPMDerniereHeure = (data) => ({\r\n    type: ActionTypes.RECEIVED_AVG_PPM_DERNIERE_HOUR,\r\n    data: data,\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const requestFailed = (errmess) => ({\r\n    type: ActionTypes.REQUEST_PLUVIO_FAILED,\r\n    payload: errmess\r\n});","import { Component } from 'react';\r\nimport Home from '../pages/Home';\r\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\r\nimport About from '../pages/AboutUs';\r\nimport Header from '../components/HeaderComponent';\r\nimport Footer from '../components/FooterComponent';\r\nimport Temperature from '../pages/Temperature';\r\nimport Notes from '../pages/Notes';\r\nimport Team from '../pages/Team';\r\nimport Rain from '../pages/Rain'\r\nimport Gaz from '../pages/Gaz'\r\nimport Wind from '../pages/Wind'\r\nimport { connect} from 'react-redux';\r\nimport { loginUser, logoutUser} from '../redux/SignInCreators';\r\nimport '../CSS/About.css';\r\nimport '../CSS/Dashboard.css';\r\nimport '../CSS/SideNav.css';\r\n\r\nimport {fetchAvgTempPerSemaine,fetchAvgTempAujourdhui,fetchAvgTempPerAnnee,fetchAvgTempDerniereHeure , fetchAvgHumiditeDerniereHeure} from '../redux/TemperatureCreators';\r\nimport {fetchAvgPluvioPerSemaine,fetchAvgPluvioAujourdhui,fetchAvgPluvioPerAnnee} from '../redux/PluvioCreators';\r\nimport {fetchAvgWindSpeedPerSemaine,fetchAvgWindSpeedPerMonth,fetchAvgWindSpeedPerAnnee , fetchAvgWindSpeedAujourdhui} from '../redux/WindSpeedCreators';\r\nimport {\r\nfetchAvgCO2PerSemaine,\r\nfetchAvgSO2PerSemaine,\r\nfetchAvgSO2PerAnnee,\r\nfetchAvgCO2PerAnnee,\r\nfetchAvgPPMPerSemaine,\r\nfetchAvgPPMPerMois,\r\nfetchAvgPPMDernierHeure\r\n}\r\nfrom '../redux/GazCreators';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      auth: state.auth,\r\n      //isAuthenticated:state.auth.isAuthenticated,\r\n      about_data:state.about_data,\r\n      temperature:state.temperature,\r\n      pluvio:state.pluvio,\r\n      wind:state.wind,\r\n      gaz:state.gaz\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n\r\n  fetchAvgTempPerSemaine : (parameter,echelle) => dispatch(fetchAvgTempPerSemaine(parameter,echelle)),\r\n  fetchAvgTempAujourdhui:(parameter,echelle) => dispatch(fetchAvgTempAujourdhui(parameter,echelle)),\r\n  fetchAvgTempPerAnnee:(parameter,echelle) => dispatch(fetchAvgTempPerAnnee(parameter,echelle)),\r\n  fetchAvgTempDerniereHeure:(parameter,echelle) => dispatch(fetchAvgTempDerniereHeure(parameter,echelle)),\r\n  fetchAvgHumiditeDerniereHeure:(parameter,echelle) => dispatch(fetchAvgHumiditeDerniereHeure(parameter,echelle)),\r\n\r\n  fetchAvgPluvioPerSemaine:(parameter,echelle) => dispatch(fetchAvgPluvioPerSemaine(parameter,echelle)),\r\n  fetchAvgPluvioAujourdhui:(parameter,echelle) => dispatch(fetchAvgPluvioAujourdhui(parameter,echelle)),\r\n  fetchAvgPluvioPerAnnee:(parameter,echelle) => dispatch(fetchAvgPluvioPerAnnee(parameter,echelle)),\r\n\r\n  fetchAvgWindSpeedPerSemaine:(parameter,echelle) => dispatch(fetchAvgWindSpeedPerSemaine(parameter,echelle)),\r\n  fetchAvgWindSpeedPerMonth:(parameter,echelle) => dispatch(fetchAvgWindSpeedPerMonth(parameter,echelle)),\r\n  fetchAvgWindSpeedPerAnnee:(parameter,echelle) => dispatch(fetchAvgWindSpeedPerAnnee(parameter,echelle)),\r\n  fetchAvgWindSpeedAujourdhui:(parameter,echelle) => dispatch(fetchAvgWindSpeedAujourdhui(parameter,echelle)),\r\n\r\n  fetchAvgCO2PerSemaine:(parameter,echelle) => dispatch(fetchAvgCO2PerSemaine(parameter,echelle)),\r\n  fetchAvgSO2PerSemaine:(parameter,echelle) => dispatch(fetchAvgSO2PerSemaine(parameter,echelle)),\r\n  fetchAvgCO2PerAnnee:(parameter,echelle) => dispatch(fetchAvgCO2PerAnnee(parameter,echelle)),\r\n  fetchAvgSO2PerAnnee:(parameter,echelle) => dispatch(fetchAvgSO2PerAnnee(parameter,echelle)),\r\n  fetchAvgPPMPerSemaine:(parameter,echelle) => dispatch(fetchAvgPPMPerSemaine(parameter,echelle)),\r\n  fetchAvgPPMPerMois:(parameter,echelle) => dispatch(fetchAvgPPMPerMois(parameter,echelle)),\r\n  fetchAvgPPMDernierHeure:(parameter,echelle) => dispatch(fetchAvgPPMDernierHeure(parameter,echelle))\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  //lamma yshouf el client el website betseer t3melo rendering\r\n  componentDidMount()\r\n  {\r\n    //GET TEMPERATURE DATA\r\n    this.props.fetchAvgTempPerSemaine(\"Temperature\",\"perDay/7\");\r\n    this.props.fetchAvgTempAujourdhui(\"Temperature\",\"perHour/24\");\r\n    this.props.fetchAvgTempPerAnnee(\"Temperature\",\"perMonth/12\");\r\n    this.props.fetchAvgTempDerniereHeure(\"Temperature\",\"perHour/1\");\r\n    this.props.fetchAvgHumiditeDerniereHeure(\"Humidity\",\"perHour/1\");\r\n\r\n    //GET PLUVIO DATA\r\n    this.props.fetchAvgPluvioPerSemaine(\"Pluvio\",\"perDay/7\");\r\n    this.props.fetchAvgPluvioAujourdhui(\"Pluvio\",\"perHour/24\");\r\n    this.props.fetchAvgPluvioPerAnnee(\"Pluvio\",\"perMonth/12\");\r\n\r\n    //GET WINDSPEED DATA\r\n    this.props.fetchAvgWindSpeedPerSemaine(\"WindSpeed\",\"perDay/7\");\r\n    this.props.fetchAvgWindSpeedPerMonth(\"WindSpeed\",\"perDay/30\");\r\n    this.props.fetchAvgWindSpeedPerAnnee(\"WindSpeed\",\"perMonth/7\");\r\n    this.props.fetchAvgWindSpeedAujourdhui(\"WindSpeed\",\"perDay/1\");\r\n\r\n    //GET GAZ DATA\r\n    this.props.fetchAvgCO2PerSemaine(\"CO2\",\"perDay/7\");\r\n    this.props.fetchAvgSO2PerSemaine(\"SO2\",\"perDay/7\");\r\n    this.props.fetchAvgCO2PerAnnee(\"CO2\",\"perMonth/12\");\r\n    this.props.fetchAvgSO2PerAnnee(\"SO2\",\"perMonth/12\");\r\n    this.props.fetchAvgPPMPerSemaine(\"PPM\",\"perWeek/1\");\r\n    this.props.fetchAvgPPMPerMois(\"PPM\",\"perMonth/1\");\r\n    this.props.fetchAvgPPMDernierHeure(\"PPM\",\"perHour/1\")\r\n  }\r\n\r\n\r\n    render()\r\n    {\r\n      if(this.props.auth.isAuthenticated){\r\n        return(\r\n\r\n        <div >\r\n        <Header auth={this.props.auth} loginUser={this.props.loginUser} logoutUser={this.props.logoutUser}/>\r\n\r\n        <Switch>\r\n        <Route path=\"/home\" component={() => <Home auth={this.props.auth} temperature={this.props.temperature} wind={this.props.wind} pluvio={this.props.pluvio} gaz={this.props.gaz} />} />\r\n        <Route exact path=\"/about\" component={About}/>\r\n        <Route exact path=\"/temperature\" component={() => <Temperature auth={this.props.auth} TemperatureData_Semaine={this.props.temperature.TemperatureData_Semaine}\r\n                                                                        TemperatureData_Aujourdhui={this.props.temperature.TemperatureData_Aujourdhui}\r\n                                                                        TemperatureData_Annee={this.props.temperature.TemperatureData_Annee}/>} />\r\n\r\n        <Route exact path=\"/notes\" component={Notes}/>\r\n        <Route exact path=\"/team\" component={Team}/>\r\n        <Route exact path=\"/rain\" component={() => <Rain auth={this.props.auth} RainData_Semaine={this.props.pluvio.RainData_Semaine}\r\n                                                                        RainData_Aujourdhui={this.props.pluvio.RainData_Aujourdhui}\r\n                                                                        RainData_Annee={this.props.pluvio.RainData_Annee}/>}/>\r\n        <Route exact path=\"/gaz\" component={() => <Gaz auth={this.props.auth} gaz={this.props.gaz}/>}/>\r\n\r\n        <Route exact path=\"/wind\" component={() => <Wind  auth={this.props.auth} WindData_Semaine={this.props.wind.WindData_Semaine}\r\n                                                                        WindData_Mois={this.props.wind.WindData_Mois}\r\n                                                                        WindData_Annee={this.props.wind.WindData_Annee}/>}/>\r\n        <Redirect to=\"/home\"/>\r\n        </Switch>\r\n\r\n\r\n        </div>\r\n        );\r\n    }\r\n    else{\r\n      return(\r\n\r\n        <div >\r\n        <Header auth={this.props.auth} loginUser={this.props.loginUser} logoutUser={this.props.logoutUser} />\r\n\r\n        <Switch>\r\n        <Route path=\"/home\" component={() => <Home auth={this.props.auth} temperature={this.props.temperature} wind={this.props.wind} pluvio={this.props.pluvio} gaz={this.props.gaz} />} />\r\n        <Route exact path=\"/about\" component={About}/>\r\n        <Route exact path=\"/team\" component={Team}/>\r\n        <Redirect to=\"/home\"/>\r\n        </Switch>\r\n\r\n\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nexport const Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\r\n        errMess: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\nimport {temperatureLabels} from '../Labels/TemperatureLabels'\r\n\r\n\r\nexport const Temperature = (state = {\r\n    TemperatureData_Semaine : {\r\n                                labels: [],\r\n                                datasets: [\r\n                                            {\r\n                                                label: temperatureLabels.temperature_semaine,\r\n                                                data: [],\r\n                                                fill: false,\r\n                                                borderColor: 'red'\r\n                                            }\r\n                                          ]       \r\n                               },\r\n    TemperatureData_Aujourdhui: {\r\n                                labels: [],\r\n                                datasets: [\r\n                                    {\r\n                                        label: temperatureLabels.temperature_aujourdhui,\r\n                                        data: [],\r\n                                        fill: false,\r\n                                        borderColor: 'blue'\r\n                                    },\r\n                                ]\r\n                              },\r\n    TemperatureData_Annee : {\r\n                                labels: [],\r\n                                datasets: [\r\n                                    {\r\n                                        label: temperatureLabels.temperature_annee,\r\n                                        data: [],\r\n                                        borderColor:\"blue\"\r\n                                    }\r\n                                ]\r\n                              },\r\n    Avg_Humidite_Derniere_heure : 0 ,\r\n    Avg_Temperature_Derniere_heure : 0\r\n    \r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.RECEIVED_AVG_TEMP_PER_SEMAINE:\r\n            return {...state,  TemperatureData_Semaine : {\r\n                                                            labels: action.day,\r\n                                                            datasets: [\r\n                                                                        {\r\n                                                                            label: temperatureLabels.temperature_semaine,\r\n                                                                            data: action.data,\r\n                                                                            fill: true,\r\n                                                                            borderColor: 'red'\r\n                                                                        }\r\n                                                                    ]       \r\n                                                            }};\r\n\r\n        case ActionTypes.RECEIVED_AVG_TEMP_AUJOURDHUI:\r\n            return {...state,TemperatureData_Aujourdhui : {\r\n                labels: action.hours,\r\n                datasets: [\r\n                            {\r\n                                label: temperatureLabels.temperature_aujourdhui,\r\n                                data: action.data,\r\n                                fill: false,\r\n                                borderColor: 'blue'\r\n                            }\r\n                        ]       \r\n                }}\r\n        case ActionTypes.RECEIVED_AVG_TEMP_PER_ANNEE:\r\n            return {...state,TemperatureData_Annee : {\r\n                labels: action.months,\r\n                datasets: [\r\n                    {\r\n                        label: temperatureLabels.temperature_annee,\r\n                        data: action.data,\r\n                        borderColor:\"blue\"\r\n                    }\r\n                ]\r\n              }\r\n            }\r\n        case ActionTypes.RECEIVED_AVG_TEMP_DERNIERE_HEURE:\r\n                return {...state,Avg_Temperature_Derniere_heure : action.data\r\n                }\r\n        case ActionTypes.RECEIVED_AVG_HUMIDITE_DERNIERE_HEURE:\r\n                    return {...state,Avg_Humidite_Derniere_heure : action.data\r\n                    }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport {temperatureLabels} from '../Labels/TemperatureLabels'\r\n\r\n\r\nexport const Pluvio = (state = {\r\n    RainData_Semaine : {\r\n        labels: [],\r\n        datasets: [{\r\n            type: 'bar',\r\n            label: 'Pluie cette semaine',\r\n            backgroundColor: '#66BB6A',\r\n            data: [],\r\n            borderColor: 'white',\r\n            borderWidth: 2\r\n        }]\r\n      },\r\n    RainData_Aujourdhui: {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'pluie dans les dernières 24h',\r\n                backgroundColor: 'blue',\r\n                data: []\r\n            },\r\n        ]\r\n      },\r\n    RainData_Annee : {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Pluie cette année',\r\n                backgroundColor: 'rgba(179,181,198,0.2)',\r\n                borderColor: 'rgba(179,181,198,1)',\r\n                pointBackgroundColor: 'blue',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                data: [],\r\n            },\r\n        ]\r\n      }\r\n    \r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.RECEIVED_AVG_PLUVIO_PER_SEMAINE:\r\n            return {...state,  RainData_Semaine: {\r\n                labels: action.hours,\r\n                datasets: [\r\n                    {\r\n                        label: 'pluie dans les dernières 24h',\r\n                        backgroundColor: 'blue',\r\n                        data: action.data\r\n                    },\r\n                ]\r\n              }}\r\n\r\n        case ActionTypes.RECEIVED_AVG_PLUVIO_AUJOURDHUI:\r\n            return {...state,RainData_Aujourdhui: {\r\n                labels: action.hours,\r\n                datasets: [\r\n                    {\r\n                        label: 'pluie dans les dernières 24h',\r\n                        backgroundColor: 'blue',\r\n                        data: action.data\r\n                    },\r\n                ]\r\n              }}\r\n        case ActionTypes.RECEIVED_AVG_PLUVIO_PER_ANNEE:\r\n            return {...state,RainData_Annee : {\r\n                labels: action.months,\r\n                datasets: [\r\n                    {\r\n                        label: 'Pluie cette année',\r\n                        backgroundColor: 'rgba(179,181,198,0.2)',\r\n                        borderColor: 'rgba(179,181,198,1)',\r\n                        pointBackgroundColor: 'blue',\r\n                        pointBorderColor: '#fff',\r\n                        pointHoverBackgroundColor: '#fff',\r\n                        pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                        data: action.data,\r\n                    },\r\n                ]\r\n              }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Wind = (state = {\r\n    WindData_Semaine : {\r\n        labels: [],\r\n          datasets: [\r\n              {\r\n                  label: 'Vitesse du Vent cette semaine en Km/h',\r\n                  backgroundColor: 'rgba(0,0,255,0.3)',\r\n                  borderColor: 'rgba(0,0,255,0.3)',\r\n                  pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                  pointBorderColor: 'black',\r\n                  pointHoverBackgroundColor: '#fff',\r\n                  data: [],\r\n              },\r\n            ]\r\n      },\r\n      WindData_Mois: {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Vitesse de Vent ce mois',\r\n                data: [],\r\n                fill: true,\r\n                borderColor: '#42A5F5'\r\n            },\r\n        ]\r\n      },\r\n    WindData_Annee : {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [],\r\n                fill: false,\r\n                borderColor: '#42A5F5'\r\n            }\r\n        ]\r\n      },\r\n      Avg_WindSpeed_Ajourdhui : null\r\n     }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.RECEIVED_AVG_WINDSPEED_PER_SEMAINE:\r\n            return {...state,  WindData_Semaine : {\r\n                labels: action.days,\r\n                  datasets: [\r\n                      {\r\n                          label: 'Vitesse du Vent cette semaine en Km/h',\r\n                          backgroundColor: 'rgba(0,0,255,0.3)',\r\n                          borderColor: 'rgba(0,0,255,0.3)',\r\n                          pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                          pointBorderColor: 'black',\r\n                          pointHoverBackgroundColor: '#fff',\r\n                          data: action.data,\r\n                      },\r\n                    ]\r\n              }};\r\n\r\n        case ActionTypes.RECEIVED_AVG_WINDSPEED_MOIS:\r\n            return {...state,WindData_Mois: {\r\n                labels: action.days,\r\n                datasets: [\r\n                    {\r\n                        label: 'Vitesse de Vent ce mois',\r\n                        data: action.data,\r\n                        fill: true,\r\n                        borderColor: '#42A5F5'\r\n                    },\r\n                ]}}\r\n        case ActionTypes.RECEIVED_AVG_WINDSPEED_PER_ANNEE:\r\n            return {...state,WindData_Annee : {\r\n                labels: action.months,\r\n                datasets: [\r\n                    {\r\n                        label: 'First Dataset',\r\n                        data: action.data,\r\n                        fill: false,\r\n                        borderColor: '#42A5F5'\r\n                    }\r\n                ]\r\n              }}\r\n              case ActionTypes.RECEIVED_AVG_WINDSPEED_AUJOURDHUI:\r\n                return {...state,Avg_WindSpeed_Ajourdhui:action.data}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Gaz = (state = {\r\n    CO2Data_Semaine : {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: \"CO2\",\r\n                data: [],\r\n                backgroundColor: '#42A5F5',\r\n            }\r\n        ]\r\n      },\r\n      SO2Data_Semaine : {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label:\"SO2\",\r\n                data: [],\r\n                backgroundColor: '#66BB6A',\r\n            }\r\n        ]\r\n      },\r\n      CO2Data_Cette_Annee : {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: \"CO2\",\r\n                data: [],\r\n                backgroundColor: '#42A5F5',\r\n            }\r\n        ]\r\n      },\r\n      SO2Data_Cette_Annee : {\r\n        labels: [],\r\n        datasets: [\r\n    \r\n            {\r\n                label:\"SO2\",\r\n                backgroundColor: '#66BB6A',\r\n                data: [],\r\n            }\r\n        ]\r\n      },\r\n      GazData_Particule_Micron_Semaine : {\r\n        labels: ['Particule 1 micron', 'Particule 2.5 micron', 'Particule 4 micron', 'Particule 10 micron'],\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\",\r\n                    \"#09F42C\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\",\r\n                    \"#09F42C\"\r\n                ]\r\n            }]\r\n      },\r\n      GazData_Particule_Micron_Mois : {\r\n        labels: ['Particule 1 micron', 'Particule 2.5 micron', 'Particule 4 micron', 'Particule 10 micron'],\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\",\r\n                    \"#28a745\"\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#36A2EB\",\r\n                    \"#FFCE56\",\r\n                    \"#28a745\"\r\n                ]\r\n            }]\r\n      },\r\n      particule_1_micron_aujourdhui:0\r\n      ,\r\n      particule_2_5_micron_aujourdhui:0\r\n      ,\r\n      particule_10_micron_aujourdhui:0\r\n    \r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.RECEIVED_AVG_CO2_PER_SEMAINE:\r\n            return {...state,  CO2Data_Semaine : {\r\n                labels: action.days,\r\n                datasets: [\r\n                    {\r\n                        label: \"CO2\",\r\n                        data: action.data,\r\n                        backgroundColor: '#42A5F5',\r\n                    }\r\n                ]\r\n              }}\r\n        case ActionTypes.RECEIVED_AVG_SO2_PER_SEMAINE:\r\n                return {...state,  SO2Data_Semaine : {\r\n                    labels: action.days,\r\n                    datasets: [\r\n                        {\r\n                            label:\"SO2\",\r\n                            data: action.data,\r\n                            backgroundColor: '#66BB6A',\r\n                        }\r\n                    ]\r\n                  }}\r\n        case ActionTypes.RECEIVED_AVG_CO2_PER_ANNEE:\r\n            return {...state,CO2Data_Cette_Annee : {\r\n                labels: action.months,\r\n                datasets: [\r\n                    {\r\n                        label: \"CO2\",\r\n                        data: action.data,\r\n                        backgroundColor: '#42A5F5',\r\n                    }\r\n                ]\r\n              }\r\n            }\r\n        case ActionTypes.RECEIVED_AVG_SO2_PER_ANNEE:\r\n                return {...state,SO2Data_Cette_Annee : {\r\n                    labels: action.months,\r\n                    datasets: [\r\n                \r\n                        {\r\n                            label:\"SO2\",\r\n                            backgroundColor: '#66BB6A',\r\n                            data: action.data,\r\n                        }\r\n                    ]\r\n                  \r\n                }}\r\n        case ActionTypes.RECEIVED_AVG_PPM_MOIS:\r\n                    return {...state,GazData_Particule_Micron_Semaine : {\r\n                        labels: ['Particule 1 micron', 'Particule 2.5 micron', 'Particule 4 micron', 'Particule 10 micron'],\r\n                        datasets: [\r\n                            {\r\n                                data: action.data,\r\n                                backgroundColor: [\r\n                                    \"#FF6384\",\r\n                                    \"#36A2EB\",\r\n                                    \"#FFCE56\",\r\n                                    \"#09F42C\"\r\n                                ],\r\n                                hoverBackgroundColor: [\r\n                                    \"#FF6384\",\r\n                                    \"#36A2EB\",\r\n                                    \"#FFCE56\",\r\n                                    \"#09F42C\"\r\n                                ]\r\n                            }]\r\n                      }\r\n                    }\r\n        case ActionTypes.RECEIVED_AVG_PPM_PER_SEMAINE:\r\n                        return {...state,GazData_Particule_Micron_Mois : {\r\n                            labels: ['Particule 1 micron', 'Particule 2.5 micron', 'Particule 4 micron', 'Particule 10 micron'],\r\n                            datasets: [\r\n                                {\r\n                                    data: action.data,\r\n                                    backgroundColor: [\r\n                                        \"#FF6384\",\r\n                                        \"#36A2EB\",\r\n                                        \"#FFCE56\",\r\n                                        \"#28a745\"\r\n                                    ],\r\n                                    hoverBackgroundColor: [\r\n                                        \"#FF6384\",\r\n                                        \"#36A2EB\",\r\n                                        \"#FFCE56\",\r\n                                        \"#28a745\"\r\n                                    ]\r\n                                }]\r\n                          }\r\n                        }\r\n        case ActionTypes.RECEIVED_AVG_PPM_DERNIERE_HOUR:\r\n            return {...state,particule_1_micron_aujourdhui:action.data[0],particule_2_5_micron_aujourdhui:action.data[1],\r\n                particule_10_micron_aujourdhui:action.data[2]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport Main from \"./main/Main\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/ConfigureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main auth={this.props.auth} temperature={this.props.temperature} pluvio={this.props.pluvio} wind={this.props.wind} \r\n            gaz={this.props.gaz}/>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport {Auth} from './auth';\r\nimport {Temperature} from './TemperatureReducer';\r\nimport {Pluvio} from './PluvioReducer';\r\nimport {Wind} from './WindSpeedReducer';\r\nimport {Gaz} from './GazReducer';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            auth: Auth,\r\n            temperature : Temperature,\r\n            pluvio : Pluvio,\r\n            wind:Wind,\r\n            gaz:Gaz\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}